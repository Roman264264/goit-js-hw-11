{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector(\"[data-start]\");\nconst dateInput = document.querySelector(\"#datetime-picker\");\nconst daysEl = document.querySelector(\"[data-days]\");\nconst hoursEl = document.querySelector(\"[data-hours]\");\nconst minutesEl = document.querySelector(\"[data-minutes]\");\nconst secondsEl = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,       \n  time_24hr: true,        \n  defaultDate: new Date(),\n  minuteIncrement: 1,     \n  onClose(selectedDates) {\n    const takeDate = selectedDates[0]; \n\n    if (takeDate < new Date()) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      startBtn.disabled = true;\n      return;\n    }\n\n    userSelectedDate = takeDate; \n    startBtn.disabled = false;\n  },\n};\n\nflatpickr(dateInput, options);\n\nstartBtn.addEventListener(\"click\", () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n\n  timerId = setInterval(() => {\n    const diff = userSelectedDate - new Date();\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      dateInput.disabled = false;\n      return;\n    }\n\n    const time = convertMs(diff);\n    updateTimerUI(time);\n  }, 1000);\n});\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  daysEl.textContent = days;\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["startBtn","dateInput","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","takeDate","iziToast","flatpickr","diff","updateTimerUI","time","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAEhC,GAAIC,EAAW,IAAI,KAAQ,CACzBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,GACpB,MACD,CAEDM,EAAmBI,EACnBV,EAAS,SAAW,EACrB,CACH,EAEAY,EAAUX,EAAWO,CAAO,EAE5BR,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBM,EAAU,YAAY,IAAM,CAC1B,MAAMM,EAAOP,EAAmB,IAAI,KAEpC,GAAIO,GAAQ,EAAG,CACb,cAAcN,CAAO,EACrBO,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC3Db,EAAU,SAAW,GACrB,MACD,CAED,MAAMc,EAAOC,EAAUH,CAAI,EAC3BC,EAAcC,CAAI,CACnB,EAAE,GAAI,EACT,CAAC,EAED,SAASD,EAAc,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDlB,EAAO,YAAce,EACrBd,EAAQ,YAAckB,EAAeH,CAAK,EAC1Cd,EAAU,YAAciB,EAAeF,CAAO,EAC9Cd,EAAU,YAAcgB,EAAeD,CAAO,CAChD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}